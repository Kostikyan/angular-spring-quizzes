{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../axios.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction SingleQuizComponent_div_7_ng_container_6_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 11);\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵpropertyInterpolate1(\"name\", \"radio_answer_\", question_r2.id, \"\");\n  }\n}\nfunction SingleQuizComponent_div_7_ng_container_6_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 12);\n  }\n  if (rf & 2) {\n    const question_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵpropertyInterpolate1(\"name\", \"checkbox_answer_\", question_r2.id, \"\");\n  }\n}\nfunction SingleQuizComponent_div_7_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, SingleQuizComponent_div_7_ng_container_6_input_1_Template, 1, 1, \"input\", 8);\n    i0.ɵɵtemplate(2, SingleQuizComponent_div_7_ng_container_6_input_2_Template, 1, 1, \"input\", 9);\n    i0.ɵɵelementStart(3, \"span\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    const y_r6 = ctx.index;\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.String(question_r2.questionType) == \"SINGLE_SELECT\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.String(question_r2.questionType) == \"MULTI_SELECT\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", y_r6 + 1, \" ) \", option_r5.title, \"\");\n  }\n}\nfunction SingleQuizComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"h5\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h6\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SingleQuizComponent_div_7_ng_container_6_Template, 6, 4, \"ng-container\", 6);\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementStart(8, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function SingleQuizComponent_div_7_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.addAnswer(ctx_r12.option));\n    });\n    i0.ɵɵtext(9, \"Confirm\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    const x_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Question \", x_r3 + 1, \". \", question_r2.title, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"score: \", question_r2.score, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getAllOptionsOfQuestion(question_r2));\n  }\n}\nexport class SingleQuizComponent {\n  constructor(router, axios) {\n    this.router = router;\n    this.axios = axios;\n    this.String = String;\n    let url = this.router.url;\n    if (url.includes(';id=')) {\n      let strings = url.split(';id=');\n      this.id = Number(strings[1]);\n      let getQuizDataRequest = {\n        id: this.id\n      };\n      this.axios.request(\"POST\", '/get-data-by-quiz-id', getQuizDataRequest).then(rs => {\n        if (rs.status != 200) return;\n        let data = rs.data;\n        this.quizTitle = data.title;\n        this.questions = data.questions;\n        this.options = data.options;\n        console.log(this.quizTitle, this.questions, this.options);\n      });\n    }\n  }\n  getAllOptionsOfQuestion(question) {\n    return this.optionsResult = this.options.filter(option => {\n      return option.question.id === question.id;\n    });\n  }\n  addAnswer(option) {}\n}\n_class = SingleQuizComponent;\n_class.ɵfac = function SingleQuizComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AxiosService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-single-quiz\"]],\n  decls: 8,\n  vars: 2,\n  consts: [[\"questionsForm\", \"ngForm\"], [\"class\", \"card ml-3 mb-3\", \"style\", \"width: 18rem;\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"ml-3\", \"mb-3\", 2, \"width\", \"18rem\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-subtitle\", \"mb-2\", \"text-muted\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", \"btn-success\", 3, \"click\"], [\"class\", \"form-check-inline\", \"type\", \"radio\", \"ngModel\", \"\", 3, \"name\", 4, \"ngIf\"], [\"class\", \"form-check-inline\", \"type\", \"checkbox\", \"ngModel\", \"\", 3, \"name\", 4, \"ngIf\"], [1, \"card-text\"], [\"type\", \"radio\", \"ngModel\", \"\", 1, \"form-check-inline\", 3, \"name\"], [\"type\", \"checkbox\", \"ngModel\", \"\", 1, \"form-check-inline\", 3, \"name\"]],\n  template: function SingleQuizComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\")(4, \"br\");\n      i0.ɵɵelementStart(5, \"form\", null, 0);\n      i0.ɵɵtemplate(7, SingleQuizComponent_div_7_Template, 10, 4, \"div\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.quizTitle);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵpropertyInterpolate1","question_r2","id","ɵɵelementContainerStart","ɵɵtemplate","SingleQuizComponent_div_7_ng_container_6_input_1_Template","SingleQuizComponent_div_7_ng_container_6_input_2_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r4","String","questionType","ɵɵtextInterpolate2","y_r6","option_r5","title","SingleQuizComponent_div_7_ng_container_6_Template","ɵɵlistener","SingleQuizComponent_div_7_Template_button_click_8_listener","ɵɵrestoreView","_r13","ctx_r12","ɵɵnextContext","ɵɵresetView","addAnswer","option","x_r3","ɵɵtextInterpolate1","score","ctx_r1","getAllOptionsOfQuestion","SingleQuizComponent","constructor","router","axios","url","includes","strings","split","Number","getQuizDataRequest","request","then","rs","status","data","quizTitle","questions","options","console","log","question","optionsResult","filter","ɵɵdirectiveInject","i1","Router","i2","AxiosService","selectors","decls","vars","consts","template","SingleQuizComponent_Template","rf","ctx","SingleQuizComponent_div_7_Template","ɵɵtextInterpolate"],"sources":["/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/single-quiz/single-quiz.component.ts","/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/single-quiz/single-quiz.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AxiosService} from \"../../axios.service\";\n\n@Component({\n  selector: 'app-single-quiz',\n  templateUrl: './single-quiz.component.html',\n  styleUrls: ['./single-quiz.component.css']\n})\nexport class SingleQuizComponent {\n\n  id!: number;\n  quizTitle!: string;\n  questions!: any;\n  options!: any;\n\n  optionsResult: any;\n\n  constructor(private router: Router, private axios: AxiosService) {\n    let url: string = this.router.url;\n    if (url.includes(';id=')) {\n      let strings = url.split(';id=');\n      this.id = Number(strings[1]);\n\n      let getQuizDataRequest = {\n        id: this.id\n      }\n\n      this.axios.request(\"POST\", '/get-data-by-quiz-id', getQuizDataRequest).then(rs => {\n        if (rs.status != 200) return;\n        let data = rs.data;\n        this.quizTitle = data.title;\n        this.questions = data.questions;\n        this.options = data.options;\n        console.log(this.quizTitle, this.questions, this.options)\n      });\n    }\n  }\n\n  getAllOptionsOfQuestion(question: any): typeof this.optionsResult {\n    return this.optionsResult = this.options.filter((option: any) => {\n      return option.question.id === question.id;\n    });\n  }\n\n  addAnswer(option: any) {\n\n  }\n\n  protected readonly String = String;\n}\n","<div>\n  <h1>{{quizTitle}}</h1>\n\n  <hr>\n  <br>\n\n  <form #questionsForm=ngForm >\n    <div class=\"card ml-3 mb-3\" *ngFor=\"let question of questions; let x = index\" style=\"width: 18rem;\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Question {{x + 1}}. {{question.title}}</h5>\n        <h6 class=\"card-subtitle mb-2 text-muted\">score: {{question.score}}</h6>\n\n        <ng-container *ngFor=\"let option of getAllOptionsOfQuestion(question); let y = index\">\n          <input class=\"form-check-inline\" type=\"radio\" name=\"radio_answer_{{question.id}}\"\n                 *ngIf=\"String(question.questionType) == 'SINGLE_SELECT'\" ngModel>\n          <input class=\"form-check-inline\" type=\"checkbox\" name=\"checkbox_answer_{{question.id}}\"\n                 *ngIf=\"String(question.questionType) == 'MULTI_SELECT'\" ngModel>\n\n          <span class=\"card-text\">{{y + 1}} ) {{option.title}}</span>\n          <br>\n        </ng-container>\n        \n        <br>\n        <button class=\"btn btn-primary btn-success\" (click)=\"addAnswer(option)\">Confirm</button>\n      </div>\n    </div>\n  </form>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}