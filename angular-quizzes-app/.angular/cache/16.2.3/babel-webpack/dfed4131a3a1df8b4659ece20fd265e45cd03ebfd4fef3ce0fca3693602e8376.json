{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(axiosService, router) {\n    this.axiosService = axiosService;\n    this.router = router;\n    this.password = \"\";\n    this.username = \"\";\n  }\n  onSubmitLogin(form) {\n    this.username = form.value.username;\n    this.password = form.value.password;\n    this.axiosService.request(\"POST\", \"/login\", {\n      username: this.username,\n      password: this.password\n    }).then(rs => {\n      if (rs.status == 200) {\n        this.axiosService.setAuthToken(rs.data.token);\n        window.location.href = \"/\";\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","axiosService","router","password","username","onSubmitLogin","form","value","request","then","rs","status","setAuthToken","data","token","window","location","href","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/login/login.component.ts"],"sourcesContent":["import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport {AxiosService} from \"../../axios.service\";\nimport {Router} from \"@angular/router\";\nimport {HeaderComponent} from \"../../layouts/header/header.component\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  password: string = \"\";\n  username: string = \"\";\n\n  constructor(private axiosService: AxiosService, private router: Router) {\n  }\n\n  onSubmitLogin(form: any): void {\n    this.username = form.value.username;\n    this.password = form.value.password;\n\n    this.axiosService.request(\n      \"POST\",\n      \"/login\",\n      {\n        username: this.username,\n        password: this.password\n      }\n    ).then(rs => {\n      if(rs.status == 200) {\n        this.axiosService.setAuthToken(rs.data.token);\n        window.location.href=\"/\"\n      }\n    })\n  }\n}\n"],"mappings":";AAAA,SAAQA,SAAS,QAAqC,eAAe;AAW9D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAH9D,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAGrB;EAEAC,aAAaA,CAACC,IAAS;IACrB,IAAI,CAACF,QAAQ,GAAGE,IAAI,CAACC,KAAK,CAACH,QAAQ;IACnC,IAAI,CAACD,QAAQ,GAAGG,IAAI,CAACC,KAAK,CAACJ,QAAQ;IAEnC,IAAI,CAACF,YAAY,CAACO,OAAO,CACvB,MAAM,EACN,QAAQ,EACR;MACEJ,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBD,QAAQ,EAAE,IAAI,CAACA;KAChB,CACF,CAACM,IAAI,CAACC,EAAE,IAAG;MACV,IAAGA,EAAE,CAACC,MAAM,IAAI,GAAG,EAAE;QACnB,IAAI,CAACV,YAAY,CAACW,YAAY,CAACF,EAAE,CAACG,IAAI,CAACC,KAAK,CAAC;QAC7CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAC,GAAG;;IAE5B,CAAC,CAAC;EACJ;CACD;AAzBYlB,cAAc,GAAAmB,UAAA,EAL1BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWtB,cAAc,CAyB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}