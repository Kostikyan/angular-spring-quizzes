{"ast":null,"code":"var _class;\nimport { inject } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HomeComponent } from \"./pages/home/home.component\";\nimport { QuizzesComponent } from \"./pages/quizzes/quizzes.component\";\nimport { CreateQuizComponent } from \"./pages/create-quiz/create-quiz.component\";\nimport { LoginComponent } from \"./pages/login/login.component\";\nimport { RegisterComponent } from \"./pages/register/register.component\";\nimport { SingleQuizComponent } from \"./pages/single-quiz/single-quiz.component\";\nimport { ErrorComponent } from \"./pages/error/error.component\";\nimport { AxiosService } from \"./axios.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst authGuard = (route, state) => {\n  let authToken = inject(AxiosService).getAuthToken();\n  return authToken != null;\n};\nconst routes = [{\n  path: 'login-page',\n  component: LoginComponent\n}, {\n  path: 'register-page',\n  component: RegisterComponent\n}, {\n  path: 'error-page/:err',\n  component: ErrorComponent\n}, {\n  path: '',\n  component: HomeComponent,\n  canActivate: [authGuard]\n}, {\n  path: 'quizzes-page',\n  component: QuizzesComponent,\n  canActivate: [authGuard]\n}, {\n  path: 'quizzes-page/create-page',\n  component: CreateQuizComponent,\n  canActivate: [authGuard]\n}, {\n  path: 'single-quiz/:id',\n  component: SingleQuizComponent,\n  canActivate: [authGuard]\n}, {\n  path: '**',\n  redirectTo: '/',\n  pathMatch: 'full',\n  canActivate: [authGuard]\n}];\nexport class AppRoutingModule {}\n_class = AppRoutingModule;\n_class.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["inject","RouterModule","HomeComponent","QuizzesComponent","CreateQuizComponent","LoginComponent","RegisterComponent","SingleQuizComponent","ErrorComponent","AxiosService","authGuard","route","state","authToken","getAuthToken","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/app-routing.module.ts"],"sourcesContent":["import {inject, NgModule} from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivateFn,\n  RouterModule,\n  RouterStateSnapshot,\n  Routes,\n  UrlTree\n} from '@angular/router';\nimport {HomeComponent} from \"./pages/home/home.component\";\nimport {QuizzesComponent} from \"./pages/quizzes/quizzes.component\";\nimport {CreateQuizComponent} from \"./pages/create-quiz/create-quiz.component\";\nimport {LoginComponent} from \"./pages/login/login.component\";\nimport {RegisterComponent} from \"./pages/register/register.component\";\nimport {SingleQuizComponent} from \"./pages/single-quiz/single-quiz.component\";\nimport {ErrorComponent} from \"./pages/error/error.component\";\nimport {Observable} from \"rxjs\";\nimport {AxiosService} from \"./axios.service\";\n\nconst authGuard: CanActivateFn = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n):\n  | Observable<boolean | UrlTree>\n  | Promise<boolean | UrlTree>\n  | boolean\n  | UrlTree => {\n  let authToken = inject(AxiosService).getAuthToken();\n  return authToken != null;\n};\n\nconst routes: Routes = [\n  {path: 'login-page', component: LoginComponent},\n  {path: 'register-page', component: RegisterComponent},\n  {path: 'error-page/:err', component: ErrorComponent},\n\n  {path: '', component: HomeComponent, canActivate: [authGuard]},\n  {path: 'quizzes-page', component: QuizzesComponent, canActivate: [authGuard]},\n  {path: 'quizzes-page/create-page', component: CreateQuizComponent, canActivate: [authGuard]},\n  {path: 'single-quiz/:id', component: SingleQuizComponent, canActivate: [authGuard]},\n  \n\n  {path: '**', redirectTo: '/', pathMatch: 'full', canActivate: [authGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n"],"mappings":";AAAA,SAAQA,MAAM,QAAiB,eAAe;AAC9C,SAGEC,YAAY,QAIP,iBAAiB;AACxB,SAAQC,aAAa,QAAO,6BAA6B;AACzD,SAAQC,gBAAgB,QAAO,mCAAmC;AAClE,SAAQC,mBAAmB,QAAO,2CAA2C;AAC7E,SAAQC,cAAc,QAAO,+BAA+B;AAC5D,SAAQC,iBAAiB,QAAO,qCAAqC;AACrE,SAAQC,mBAAmB,QAAO,2CAA2C;AAC7E,SAAQC,cAAc,QAAO,+BAA+B;AAE5D,SAAQC,YAAY,QAAO,iBAAiB;;;AAE5C,MAAMC,SAAS,GAAkBA,CAC/BC,KAA6B,EAC7BC,KAA0B,KAKd;EACZ,IAAIC,SAAS,GAAGb,MAAM,CAACS,YAAY,CAAC,CAACK,YAAY,EAAE;EACnD,OAAOD,SAAS,IAAI,IAAI;AAC1B,CAAC;AAED,MAAME,MAAM,GAAW,CACrB;EAACC,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEZ;AAAc,CAAC,EAC/C;EAACW,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAEX;AAAiB,CAAC,EACrD;EAACU,IAAI,EAAE,iBAAiB;EAAEC,SAAS,EAAET;AAAc,CAAC,EAEpD;EAACQ,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEf,aAAa;EAAEgB,WAAW,EAAE,CAACR,SAAS;AAAC,CAAC,EAC9D;EAACM,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAEd,gBAAgB;EAAEe,WAAW,EAAE,CAACR,SAAS;AAAC,CAAC,EAC7E;EAACM,IAAI,EAAE,0BAA0B;EAAEC,SAAS,EAAEb,mBAAmB;EAAEc,WAAW,EAAE,CAACR,SAAS;AAAC,CAAC,EAC5F;EAACM,IAAI,EAAE,iBAAiB;EAAEC,SAAS,EAAEV,mBAAmB;EAAEW,WAAW,EAAE,CAACR,SAAS;AAAC,CAAC,EAGnF;EAACM,IAAI,EAAE,IAAI;EAAEG,UAAU,EAAE,GAAG;EAAEC,SAAS,EAAE,MAAM;EAAEF,WAAW,EAAE,CAACR,SAAS;AAAC,CAAC,CAC3E;AAMD,OAAM,MAAOW,gBAAgB;SAAhBA,gBAAgB;;mBAAhBA,MAAgB;AAAA;;QAAhBA;AAAgB;;YAHjBpB,YAAY,CAACqB,OAAO,CAACP,MAAM,CAAC,EAC5Bd,YAAY;AAAA;;2EAEXoB,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAvB,YAAA;IAAAwB,OAAA,GAFjBxB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}