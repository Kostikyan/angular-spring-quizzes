{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../axios.service\";\nimport * as i3 from \"@angular/common\";\nfunction SingleQuizComponent_ng_container_7_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"radio_answer_\", ctx_r4.question.id, \"\");\n  }\n}\nfunction SingleQuizComponent_ng_container_7_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"checkbox_answer_\", ctx_r5.question.id, \"\");\n  }\n}\nfunction SingleQuizComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, SingleQuizComponent_ng_container_7_input_1_Template, 1, 1, \"input\", 3);\n    i0.ɵɵtemplate(2, SingleQuizComponent_ng_container_7_input_2_Template, 1, 1, \"input\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const y_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.String(ctx_r0.question.questionType) == \"SINGLE_SELECT\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.String(ctx_r0.question.questionType) == \"MULTI_SELECT\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", y_r3 + 1, \" ) \", option_r2.title, \" \");\n  }\n}\nfunction SingleQuizComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"h5\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h6\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 11);\n    i0.ɵɵtext(7, \"Some quick example text to build on the card title and make up the bulk of the card's content.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"button\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r6 = ctx.$implicit;\n    const x_r7 = ctx.index;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Question \", x_r7 + 1, \". \", question_r6.title, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r6.score);\n  }\n}\nexport class SingleQuizComponent {\n  constructor(router, axios) {\n    this.router = router;\n    this.axios = axios;\n    this.String = String;\n    let url = this.router.url;\n    if (url.includes(';id=')) {\n      let strings = url.split(';id=');\n      this.id = Number(strings[1]);\n      let getQuizDataRequest = {\n        id: this.id\n      };\n      this.axios.request(\"POST\", '/get-data-by-quiz-id', getQuizDataRequest).then(rs => {\n        if (rs.status != 200) return;\n        let data = rs.data;\n        this.quizTitle = data.title;\n        this.questions = data.questions;\n        this.options = data.options;\n        console.log(this.quizTitle, this.questions, this.options);\n      });\n    }\n  }\n  getAllOptionsOfQuestion(question) {\n    return this.optionsResult = this.options.filter(option => {\n      return option.question.id === question.id;\n    });\n  }\n}\n_class = SingleQuizComponent;\n_class.ɵfac = function SingleQuizComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AxiosService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-single-quiz\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[1, \"mb-3\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"card\", \"style\", \"width: 18rem;\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", 3, \"name\", 4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"name\", 4, \"ngIf\"], [\"type\", \"radio\", 3, \"name\"], [\"type\", \"checkbox\", 3, \"name\"], [1, \"card\", 2, \"width\", \"18rem\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-subtitle\", \"mb-2\", \"text-muted\"], [1, \"card-text\"], [1, \"btn\", \"btn-primary\", \"btn-success\"]],\n  template: function SingleQuizComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\")(4, \"br\");\n      i0.ɵɵelementContainerStart(5, 0);\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵtemplate(7, SingleQuizComponent_ng_container_7_Template, 5, 4, \"ng-container\", 1);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(8, SingleQuizComponent_div_8_Template, 9, 3, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.quizTitle);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getAllOptionsOfQuestion(ctx.question));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵpropertyInterpolate1","ctx_r4","question","id","ctx_r5","ɵɵelementContainerStart","ɵɵtemplate","SingleQuizComponent_ng_container_7_input_1_Template","SingleQuizComponent_ng_container_7_input_2_Template","ɵɵtext","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r0","String","questionType","ɵɵtextInterpolate2","y_r3","option_r2","title","ɵɵelementStart","ɵɵelementEnd","x_r7","question_r6","ɵɵtextInterpolate","score","SingleQuizComponent","constructor","router","axios","url","includes","strings","split","Number","getQuizDataRequest","request","then","rs","status","data","quizTitle","questions","options","console","log","getAllOptionsOfQuestion","optionsResult","filter","option","ɵɵdirectiveInject","i1","Router","i2","AxiosService","selectors","decls","vars","consts","template","SingleQuizComponent_Template","rf","ctx","SingleQuizComponent_ng_container_7_Template","SingleQuizComponent_div_8_Template"],"sources":["/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/single-quiz/single-quiz.component.ts","/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/single-quiz/single-quiz.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AxiosService} from \"../../axios.service\";\n\n@Component({\n  selector: 'app-single-quiz',\n  templateUrl: './single-quiz.component.html',\n  styleUrls: ['./single-quiz.component.css']\n})\nexport class SingleQuizComponent {\n\n  id!: number;\n  quizTitle!: string;\n  questions!: any;\n  options!: any;\n\n  optionsResult: any;\n\n  constructor(private router: Router, private axios: AxiosService) {\n    let url: string = this.router.url;\n    if (url.includes(';id=')) {\n      let strings = url.split(';id=');\n      this.id = Number(strings[1]);\n\n      let getQuizDataRequest = {\n        id: this.id\n      }\n\n      this.axios.request(\"POST\", '/get-data-by-quiz-id', getQuizDataRequest).then(rs => {\n        if (rs.status != 200) return;\n        let data = rs.data;\n        this.quizTitle = data.title;\n        this.questions = data.questions;\n        this.options = data.options;\n        console.log(this.quizTitle, this.questions, this.options)\n      });\n    }\n  }\n\n  getAllOptionsOfQuestion(question: any): typeof this.optionsResult {\n    return this.optionsResult = this.options.filter((option: any) => {\n      return option.question.id === question.id;\n    });\n  }\n\n  protected readonly String = String;\n}\n","<div>\n  <h1>{{quizTitle}}</h1>\n\n  <hr><br>\n\n  <ng-container  class=\"mb-3\">\n\n    <br>\n      <ng-container *ngFor=\"let option of getAllOptionsOfQuestion(question); let y = index\">\n        <input type=\"radio\" name=\"radio_answer_{{question.id}}\" *ngIf=\"String(question.questionType) == 'SINGLE_SELECT'\">\n        <input type=\"checkbox\" name=\"checkbox_answer_{{question.id}}\" *ngIf=\"String(question.questionType) == 'MULTI_SELECT'\">\n        {{y+1}} ) {{option.title}}\n        <br>\n      </ng-container>\n  </ng-container>\n\n  <div class=\"card\" *ngFor=\"let question of questions; let x = index\" style=\"width: 18rem;\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Question {{x+1}}. {{question.title}}</h5>\n      <h6 class=\"card-subtitle mb-2 text-muted\">{{question.score}}</h6>\n      <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n      <button class=\"btn btn-primary btn-success\"></button>\n    </div>\n  </div>\n\n</div>\n"],"mappings":";;;;;;;ICSQA,EAAA,CAAAC,SAAA,eAAiH;;;;IAA7FD,EAAA,CAAAE,sBAAA,0BAAAC,MAAA,CAAAC,QAAA,CAAAC,EAAA,KAAmC;;;;;IACvDL,EAAA,CAAAC,SAAA,eAAsH;;;;IAA/FD,EAAA,CAAAE,sBAAA,6BAAAI,MAAA,CAAAF,QAAA,CAAAC,EAAA,KAAsC;;;;;IAF/DL,EAAA,CAAAO,uBAAA,GAAsF;IACpFP,EAAA,CAAAQ,UAAA,IAAAC,mDAAA,mBAAiH;IACjHT,EAAA,CAAAQ,UAAA,IAAAE,mDAAA,mBAAsH;IACtHV,EAAA,CAAAW,MAAA,GACA;IAAAX,EAAA,CAAAC,SAAA,SAAI;IACND,EAAA,CAAAY,qBAAA,EAAe;;;;;;IAJ4CZ,EAAA,CAAAa,SAAA,GAAsD;IAAtDb,EAAA,CAAAc,UAAA,SAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAX,QAAA,CAAAa,YAAA,qBAAsD;IAChDjB,EAAA,CAAAa,SAAA,GAAqD;IAArDb,EAAA,CAAAc,UAAA,SAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAX,QAAA,CAAAa,YAAA,oBAAqD;IACpHjB,EAAA,CAAAa,SAAA,GACA;IADAb,EAAA,CAAAkB,kBAAA,MAAAC,IAAA,aAAAC,SAAA,CAAAC,KAAA,MACA;;;;;IAINrB,EAAA,CAAAsB,cAAA,aAA0F;IAE/DtB,EAAA,CAAAW,MAAA,GAAoC;IAAAX,EAAA,CAAAuB,YAAA,EAAK;IAChEvB,EAAA,CAAAsB,cAAA,aAA0C;IAAAtB,EAAA,CAAAW,MAAA,GAAkB;IAAAX,EAAA,CAAAuB,YAAA,EAAK;IACjEvB,EAAA,CAAAsB,cAAA,YAAqB;IAAAtB,EAAA,CAAAW,MAAA,qGAA8F;IAAAX,EAAA,CAAAuB,YAAA,EAAI;IACvHvB,EAAA,CAAAC,SAAA,iBAAqD;IACvDD,EAAA,CAAAuB,YAAA,EAAM;;;;;IAJmBvB,EAAA,CAAAa,SAAA,GAAoC;IAApCb,EAAA,CAAAkB,kBAAA,cAAAM,IAAA,YAAAC,WAAA,CAAAJ,KAAA,KAAoC;IACjBrB,EAAA,CAAAa,SAAA,GAAkB;IAAlBb,EAAA,CAAA0B,iBAAA,CAAAD,WAAA,CAAAE,KAAA,CAAkB;;;ADVlE,OAAM,MAAOC,mBAAmB;EAS9BC,YAAoBC,MAAc,EAAUC,KAAmB;IAA3C,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IA2B9B,KAAAf,MAAM,GAAGA,MAAM;IA1BhC,IAAIgB,GAAG,GAAW,IAAI,CAACF,MAAM,CAACE,GAAG;IACjC,IAAIA,GAAG,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MACxB,IAAIC,OAAO,GAAGF,GAAG,CAACG,KAAK,CAAC,MAAM,CAAC;MAC/B,IAAI,CAAC9B,EAAE,GAAG+B,MAAM,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;MAE5B,IAAIG,kBAAkB,GAAG;QACvBhC,EAAE,EAAE,IAAI,CAACA;OACV;MAED,IAAI,CAAC0B,KAAK,CAACO,OAAO,CAAC,MAAM,EAAE,sBAAsB,EAAED,kBAAkB,CAAC,CAACE,IAAI,CAACC,EAAE,IAAG;QAC/E,IAAIA,EAAE,CAACC,MAAM,IAAI,GAAG,EAAE;QACtB,IAAIC,IAAI,GAAGF,EAAE,CAACE,IAAI;QAClB,IAAI,CAACC,SAAS,GAAGD,IAAI,CAACrB,KAAK;QAC3B,IAAI,CAACuB,SAAS,GAAGF,IAAI,CAACE,SAAS;QAC/B,IAAI,CAACC,OAAO,GAAGH,IAAI,CAACG,OAAO;QAC3BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,SAAS,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,OAAO,CAAC;MAC3D,CAAC,CAAC;;EAEN;EAEAG,uBAAuBA,CAAC5C,QAAa;IACnC,OAAO,IAAI,CAAC6C,aAAa,GAAG,IAAI,CAACJ,OAAO,CAACK,MAAM,CAAEC,MAAW,IAAI;MAC9D,OAAOA,MAAM,CAAC/C,QAAQ,CAACC,EAAE,KAAKD,QAAQ,CAACC,EAAE;IAC3C,CAAC,CAAC;EACJ;;SAlCWuB,mBAAmB;;mBAAnBA,MAAmB,EAAA5B,EAAA,CAAAoD,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAtD,EAAA,CAAAoD,iBAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;;QAAnB5B,MAAmB;EAAA6B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCThC/D,EAAA,CAAAsB,cAAA,UAAK;MACCtB,EAAA,CAAAW,MAAA,GAAa;MAAAX,EAAA,CAAAuB,YAAA,EAAK;MAEtBvB,EAAA,CAAAC,SAAA,SAAI;MAEJD,EAAA,CAAAO,uBAAA,MAA4B;MAE1BP,EAAA,CAAAC,SAAA,SAAI;MACFD,EAAA,CAAAQ,UAAA,IAAAyD,2CAAA,0BAKe;MACnBjE,EAAA,CAAAY,qBAAA,EAAe;MAEfZ,EAAA,CAAAQ,UAAA,IAAA0D,kCAAA,iBAOM;MAERlE,EAAA,CAAAuB,YAAA,EAAM;;;MAxBAvB,EAAA,CAAAa,SAAA,GAAa;MAAbb,EAAA,CAAA0B,iBAAA,CAAAsC,GAAA,CAAArB,SAAA,CAAa;MAOoB3C,EAAA,CAAAa,SAAA,GAAsC;MAAtCb,EAAA,CAAAc,UAAA,YAAAkD,GAAA,CAAAhB,uBAAA,CAAAgB,GAAA,CAAA5D,QAAA,EAAsC;MAQpCJ,EAAA,CAAAa,SAAA,GAAc;MAAdb,EAAA,CAAAc,UAAA,YAAAkD,GAAA,CAAApB,SAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}