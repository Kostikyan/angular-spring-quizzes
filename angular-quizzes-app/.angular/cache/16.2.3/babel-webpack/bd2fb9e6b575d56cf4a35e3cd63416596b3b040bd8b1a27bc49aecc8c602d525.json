{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../axios.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../layouts/header/header.component\";\nimport * as i4 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(axiosService, router, hc) {\n    this.axiosService = axiosService;\n    this.router = router;\n    this.hc = hc;\n    this.password = \"\";\n    this.username = \"\";\n  }\n  onSubmitLogin(form) {\n    this.username = form.value.username;\n    this.password = form.value.password;\n    this.axiosService.request(\"POST\", \"/login\", {\n      username: this.username,\n      password: this.password\n    }).then(rs => {\n      if (rs.status == 200) {\n        this.axiosService.setAuthToken();\n        this.router.navigate(['/']);\n      }\n    });\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AxiosService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HeaderComponent));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 17,\n  vars: 2,\n  consts: [[1, \"login\"], [1, \"login-form\", \"text-center\"], [1, \"login-form-name\", 2, \"font-family\", \"'Raleway', sans-serif\"], [1, \"mt-4\", 3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"form-group\"], [2, \"font-family\", \"'Raleway', sans-serif\"], [\"type\", \"email\", \"name\", \"username\", \"placeholder\", \"Email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"mt-4\", 2, \"width\", \"100%\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 2, \"width\", \"80px\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n      i0.ɵɵtext(3, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.onSubmitLogin(_r0));\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 9)(15, \"button\", 10);\n      i0.ɵɵtext(16, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".login[_ngcontent-%COMP%] {\\n  background-color: var(--primary-color);\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  padding: 200.4px;\\n}\\n.login-form[_ngcontent-%COMP%] {\\n  background-color: var(--secondary-color);\\n  width: 70vh;\\n  height: 40vh;\\n  padding: 30px;\\n}\\n.login-form-name[_ngcontent-%COMP%]{\\n  color: var(--primary-color);\\n  font-family: 'Roboto', sans-serif;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHNDQUFzQztFQUN0QyxXQUFXO0VBQ1gsWUFBWTtFQUNaLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSx3Q0FBd0M7RUFDeEMsV0FBVztFQUNYLFlBQVk7RUFDWixhQUFhO0FBQ2Y7QUFDQTtFQUNFLDJCQUEyQjtFQUMzQixpQ0FBaUM7QUFDbkMiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmc6IDIwMC40cHg7XG59XG4ubG9naW4tZm9ybSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNlY29uZGFyeS1jb2xvcik7XG4gIHdpZHRoOiA3MHZoO1xuICBoZWlnaHQ6IDQwdmg7XG4gIHBhZGRpbmc6IDMwcHg7XG59XG4ubG9naW4tZm9ybS1uYW1le1xuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","axiosService","router","hc","password","username","onSubmitLogin","form","value","request","then","rs","status","setAuthToken","navigate","i0","ɵɵdirectiveInject","i1","AxiosService","i2","Router","i3","HeaderComponent","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","LoginComponent_Template_input_ngModelChange_9_listener","$event","LoginComponent_Template_input_ngModelChange_13_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/login/login.component.ts","/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/login/login.component.html"],"sourcesContent":["import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport {AxiosService} from \"../../axios.service\";\nimport {Router} from \"@angular/router\";\nimport {HeaderComponent} from \"../../layouts/header/header.component\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  password: string = \"\";\n  username: string = \"\";\n\n  constructor(private axiosService: AxiosService, private router: Router, private hc: HeaderComponent) {\n  }\n\n  onSubmitLogin(form: any): void {\n    this.username = form.value.username;\n    this.password = form.value.password;\n\n    this.axiosService.request(\n      \"POST\",\n      \"/login\",\n      {\n        username: this.username,\n        password: this.password\n      }\n    ).then(rs => {\n      if(rs.status == 200) {\n        this.axiosService.setAuthToken()\n        this.router.navigate(['/']);\n      }\n    })\n  }\n}\n","<div class=\"login\">\n\n  <div class=\"login-form text-center\">\n    <h3 class=\"login-form-name\" style=\"font-family: 'Raleway', sans-serif;\">Login Form</h3>\n\n    <form #loginForm=ngForm class=\"mt-4\" (ngSubmit)=\"onSubmitLogin(loginForm)\">\n        <div class=\"form-group\">\n          <label style=\"font-family: 'Raleway', sans-serif;\">Email</label>\n          <input type=\"email\" name=\"username\" placeholder=\"Email\" class=\"form-control\" [(ngModel)]=\"username\"/>\n        </div>\n\n        <div class=\"form-group\">\n          <label style=\"font-family: 'Raleway', sans-serif;\">Password</label>\n          <input type=\"password\" name=\"password\" placeholder=\"Password\" class=\"form-control\" [(ngModel)]=\"password\">\n        </div>\n\n        <div class=\"form-group mt-4\" style=\"width: 100%;\">\n          <button type=\"submit\" class=\"btn btn-success\" style=\"width: 80px\">Login</button>\n        </div>\n    </form>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}