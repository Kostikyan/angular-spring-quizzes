{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../axios.service\";\nimport * as i3 from \"@angular/common\";\nfunction SingleQuizComponent_ng_container_5_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"input\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    const y_r5 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", y_r5 + 1, \" ) \", option_r4.title, \" \");\n  }\n}\nfunction SingleQuizComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtemplate(3, SingleQuizComponent_ng_container_5_ng_container_3_Template, 3, 2, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    const x_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Question \", x_r2 + 1, \". \", question_r1.title, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getAllOptionsOfQuestion(question_r1));\n  }\n}\nexport class SingleQuizComponent {\n  constructor(router, axios) {\n    this.router = router;\n    this.axios = axios;\n    let url = this.router.url;\n    if (url.includes(';id=')) {\n      let strings = url.split(';id=');\n      this.id = Number(strings[1]);\n      let getQuizDataRequest = {\n        id: this.id\n      };\n      this.axios.request(\"POST\", '/get-data-by-quiz-id', getQuizDataRequest).then(rs => {\n        if (rs.status != 200) return;\n        let data = rs.data;\n        this.quizTitle = data.title;\n        this.questions = data.questions;\n        this.options = data.options;\n        console.log(this.quizTitle, this.questions, this.options);\n      });\n    }\n  }\n  getAllOptionsOfQuestion(question) {\n    return this.optionsResult = this.options.filter(option => {\n      return option.question.id === question.id;\n    });\n  }\n}\n_class = SingleQuizComponent;\n_class.ɵfac = function SingleQuizComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AxiosService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-single-quiz\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"class\", \"mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-3\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", \"name\", \"answer\"]],\n  template: function SingleQuizComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\")(4, \"br\");\n      i0.ɵɵtemplate(5, SingleQuizComponent_ng_container_5_Template, 4, 3, \"ng-container\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.quizTitle);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵelement","ɵɵtext","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate2","y_r5","option_r4","title","ɵɵtemplate","SingleQuizComponent_ng_container_5_ng_container_3_Template","x_r2","question_r1","ɵɵproperty","ctx_r0","getAllOptionsOfQuestion","SingleQuizComponent","constructor","router","axios","url","includes","strings","split","id","Number","getQuizDataRequest","request","then","rs","status","data","quizTitle","questions","options","console","log","question","optionsResult","filter","option","ɵɵdirectiveInject","i1","Router","i2","AxiosService","selectors","decls","vars","consts","template","SingleQuizComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelementEnd","SingleQuizComponent_ng_container_5_Template","ɵɵtextInterpolate"],"sources":["/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/single-quiz/single-quiz.component.ts","/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/single-quiz/single-quiz.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AxiosService} from \"../../axios.service\";\n\n@Component({\n  selector: 'app-single-quiz',\n  templateUrl: './single-quiz.component.html',\n  styleUrls: ['./single-quiz.component.css']\n})\nexport class SingleQuizComponent {\n\n  id!: number;\n  quizTitle!: string;\n  questions!: any;\n  options!: any;\n\n  optionsResult: any;\n\n  constructor(private router: Router, private axios: AxiosService) {\n    let url: string = this.router.url;\n    if (url.includes(';id=')) {\n      let strings = url.split(';id=');\n      this.id = Number(strings[1]);\n\n      let getQuizDataRequest = {\n        id: this.id\n      }\n\n      this.axios.request(\"POST\", '/get-data-by-quiz-id', getQuizDataRequest).then(rs => {\n        if (rs.status != 200) return;\n        let data = rs.data;\n        this.quizTitle = data.title;\n        this.questions = data.questions;\n        this.options = data.options;\n        console.log(this.quizTitle, this.questions, this.options)\n      });\n    }\n  }\n\n  getAllOptionsOfQuestion(question: any): typeof this.optionsResult {\n    return this.optionsResult = this.options.filter((option: any) => {\n      return option.question.id === question.id;\n    });\n  }\n}\n","<div>\n  <h1>{{quizTitle}}</h1>\n\n  <hr><br>\n\n  <ng-container *ngFor=\"let question of questions; let x = index\" class=\"mb-3\">\n      Question {{x+1}}. {{question.title}}\n    <br>\n      <ng-container *ngFor=\"let option of getAllOptionsOfQuestion(question); let y = index\">\n        <input type=\"checkbox\" name=\"answer\" >  {{y+1}} ) {{option.title}}\n      </ng-container>\n  </ng-container>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}