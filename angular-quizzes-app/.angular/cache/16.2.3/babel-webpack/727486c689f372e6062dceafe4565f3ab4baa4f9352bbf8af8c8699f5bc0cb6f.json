{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../axios.service\";\nimport * as i3 from \"@angular/common\";\nfunction SingleQuizComponent_div_5_ng_container_6_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 10);\n  }\n  if (rf & 2) {\n    const question_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵpropertyInterpolate1(\"name\", \"radio_answer_\", question_r1.id, \"\");\n  }\n}\nfunction SingleQuizComponent_div_5_ng_container_6_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 11);\n  }\n  if (rf & 2) {\n    const question_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵpropertyInterpolate1(\"name\", \"checkbox_answer_\", question_r1.id, \"\");\n  }\n}\nfunction SingleQuizComponent_div_5_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, SingleQuizComponent_div_5_ng_container_6_input_1_Template, 1, 1, \"input\", 7);\n    i0.ɵɵtemplate(2, SingleQuizComponent_div_5_ng_container_6_input_2_Template, 1, 1, \"input\", 8);\n    i0.ɵɵelementStart(3, \"span\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    const y_r5 = ctx.index;\n    const question_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.String(question_r1.questionType) == \"SINGLE_SELECT\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.String(question_r1.questionType) == \"MULTI_SELECT\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", y_r5 + 1, \" ) \", option_r4.title, \"\");\n  }\n}\nfunction SingleQuizComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h5\", 3);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h6\", 4);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SingleQuizComponent_div_5_ng_container_6_Template, 6, 4, \"ng-container\", 5);\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementStart(8, \"button\", 6);\n    i0.ɵɵtext(9, \"Confirm\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    const x_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Question \", x_r2 + 1, \". \", question_r1.title, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"score: \", question_r1.score, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getAllOptionsOfQuestion(question_r1));\n  }\n}\nexport class SingleQuizComponent {\n  constructor(router, axios) {\n    this.router = router;\n    this.axios = axios;\n    this.String = String;\n    let url = this.router.url;\n    if (url.includes(';id=')) {\n      let strings = url.split(';id=');\n      this.id = Number(strings[1]);\n      let getQuizDataRequest = {\n        id: this.id\n      };\n      this.axios.request(\"POST\", '/get-data-by-quiz-id', getQuizDataRequest).then(rs => {\n        if (rs.status != 200) return;\n        let data = rs.data;\n        this.quizTitle = data.title;\n        this.questions = data.questions;\n        this.options = data.options;\n        console.log(this.quizTitle, this.questions, this.options);\n      });\n    }\n  }\n  getAllOptionsOfQuestion(question) {\n    return this.optionsResult = this.options.filter(option => {\n      return option.question.id === question.id;\n    });\n  }\n}\n_class = SingleQuizComponent;\n_class.ɵfac = function SingleQuizComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AxiosService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-single-quiz\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"class\", \"card ml-3 mb-3\", \"style\", \"width: 18rem;\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"ml-3\", \"mb-3\", 2, \"width\", \"18rem\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-subtitle\", \"mb-2\", \"text-muted\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", \"btn-success\"], [\"class\", \"form-check-inline\", \"type\", \"radio\", 3, \"name\", 4, \"ngIf\"], [\"class\", \"form-check-inline\", \"type\", \"checkbox\", 3, \"name\", 4, \"ngIf\"], [1, \"card-text\"], [\"type\", \"radio\", 1, \"form-check-inline\", 3, \"name\"], [\"type\", \"checkbox\", 1, \"form-check-inline\", 3, \"name\"]],\n  template: function SingleQuizComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\")(4, \"br\");\n      i0.ɵɵtemplate(5, SingleQuizComponent_div_5_Template, 10, 4, \"div\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.quizTitle);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵpropertyInterpolate1","question_r1","id","ɵɵelementContainerStart","ɵɵtemplate","SingleQuizComponent_div_5_ng_container_6_input_1_Template","SingleQuizComponent_div_5_ng_container_6_input_2_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r3","String","questionType","ɵɵtextInterpolate2","y_r5","option_r4","title","SingleQuizComponent_div_5_ng_container_6_Template","x_r2","ɵɵtextInterpolate1","score","ctx_r0","getAllOptionsOfQuestion","SingleQuizComponent","constructor","router","axios","url","includes","strings","split","Number","getQuizDataRequest","request","then","rs","status","data","quizTitle","questions","options","console","log","question","optionsResult","filter","option","ɵɵdirectiveInject","i1","Router","i2","AxiosService","selectors","decls","vars","consts","template","SingleQuizComponent_Template","rf","ctx","SingleQuizComponent_div_5_Template","ɵɵtextInterpolate"],"sources":["/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/single-quiz/single-quiz.component.ts","/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/single-quiz/single-quiz.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AxiosService} from \"../../axios.service\";\n\n@Component({\n  selector: 'app-single-quiz',\n  templateUrl: './single-quiz.component.html',\n  styleUrls: ['./single-quiz.component.css']\n})\nexport class SingleQuizComponent {\n\n  id!: number;\n  quizTitle!: string;\n  questions!: any;\n  options!: any;\n\n  optionsResult: any;\n\n  constructor(private router: Router, private axios: AxiosService) {\n    let url: string = this.router.url;\n    if (url.includes(';id=')) {\n      let strings = url.split(';id=');\n      this.id = Number(strings[1]);\n\n      let getQuizDataRequest = {\n        id: this.id\n      }\n\n      this.axios.request(\"POST\", '/get-data-by-quiz-id', getQuizDataRequest).then(rs => {\n        if (rs.status != 200) return;\n        let data = rs.data;\n        this.quizTitle = data.title;\n        this.questions = data.questions;\n        this.options = data.options;\n        console.log(this.quizTitle, this.questions, this.options)\n      });\n    }\n  }\n\n  getAllOptionsOfQuestion(question: any): typeof this.optionsResult {\n    return this.optionsResult = this.options.filter((option: any) => {\n      return option.question.id === question.id;\n    });\n  }\n\n  protected readonly String = String;\n}\n","<div>\n  <h1>{{quizTitle}}</h1>\n\n  <hr>\n  <br>\n\n  <div class=\"card ml-3 mb-3\" *ngFor=\"let question of questions; let x = index\" style=\"width: 18rem;\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Question {{x + 1}}. {{question.title}}</h5>\n      <h6 class=\"card-subtitle mb-2 text-muted\">score: {{question.score}}</h6>\n\n      <ng-container *ngFor=\"let option of getAllOptionsOfQuestion(question); let y = index\">\n        <input class=\"form-check-inline\" type=\"radio\" name=\"radio_answer_{{question.id}}\" *ngIf=\"String(question.questionType) == 'SINGLE_SELECT'\">\n        <input class=\"form-check-inline\" type=\"checkbox\" name=\"checkbox_answer_{{question.id}}\"\n               *ngIf=\"String(question.questionType) == 'MULTI_SELECT'\">\n\n        <span class=\"card-text\">{{y + 1}} ) {{option.title}}</span>\n        <br>\n      </ng-container>\n      <br>\n      <button class=\"btn btn-primary btn-success\">Confirm</button>\n    </div>\n  </div>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}