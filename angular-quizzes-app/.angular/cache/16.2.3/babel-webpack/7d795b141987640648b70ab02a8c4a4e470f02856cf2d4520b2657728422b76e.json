{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../axios.service\";\nimport * as i3 from \"@angular/common\";\nfunction SingleQuizComponent_ng_container_5_ng_container_3_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n  if (rf & 2) {\n    const question_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵpropertyInterpolate1(\"name\", \"radio_answer_\", question_r1.id, \"\");\n  }\n}\nfunction SingleQuizComponent_ng_container_5_ng_container_3_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 6);\n  }\n  if (rf & 2) {\n    const question_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵpropertyInterpolate1(\"name\", \"checkbox_answer_\", question_r1.id, \"\");\n  }\n}\nfunction SingleQuizComponent_ng_container_5_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, SingleQuizComponent_ng_container_5_ng_container_3_input_1_Template, 1, 1, \"input\", 3);\n    i0.ɵɵtemplate(2, SingleQuizComponent_ng_container_5_ng_container_3_input_2_Template, 1, 1, \"input\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    const y_r5 = ctx.index;\n    const question_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.String(question_r1.questionType) == \"SINGLE_SELECT\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.String(question_r1.questionType) == \"MULTI_SELECT\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", y_r5 + 1, \" ) \", option_r4.title, \" \");\n  }\n}\nfunction SingleQuizComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtemplate(3, SingleQuizComponent_ng_container_5_ng_container_3_Template, 5, 4, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    const x_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Question \", x_r2 + 1, \". \", question_r1.title, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getAllOptionsOfQuestion(question_r1));\n  }\n}\nexport class SingleQuizComponent {\n  constructor(router, axios) {\n    this.router = router;\n    this.axios = axios;\n    let url = this.router.url;\n    if (url.includes(';id=')) {\n      let strings = url.split(';id=');\n      this.id = Number(strings[1]);\n      let getQuizDataRequest = {\n        id: this.id\n      };\n      this.axios.request(\"POST\", '/get-data-by-quiz-id', getQuizDataRequest).then(rs => {\n        if (rs.status != 200) return;\n        let data = rs.data;\n        this.quizTitle = data.title;\n        this.questions = data.questions;\n        this.options = data.options;\n        console.log(this.quizTitle, this.questions, this.options);\n      });\n    }\n  }\n  getAllOptionsOfQuestion(question) {\n    return this.optionsResult = this.options.filter(option => {\n      return option.question.id === question.id;\n    });\n  }\n}\n_class = SingleQuizComponent;\n_class.ɵfac = function SingleQuizComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AxiosService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-single-quiz\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"class\", \"mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-3\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", 3, \"name\", 4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"name\", 4, \"ngIf\"], [\"type\", \"radio\", 3, \"name\"], [\"type\", \"checkbox\", 3, \"name\"]],\n  template: function SingleQuizComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\")(4, \"br\");\n      i0.ɵɵtemplate(5, SingleQuizComponent_ng_container_5_Template, 4, 3, \"ng-container\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.quizTitle);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵpropertyInterpolate1","question_r1","id","ɵɵelementContainerStart","ɵɵtemplate","SingleQuizComponent_ng_container_5_ng_container_3_input_1_Template","SingleQuizComponent_ng_container_5_ng_container_3_input_2_Template","ɵɵtext","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r3","String","questionType","ɵɵtextInterpolate2","y_r5","option_r4","title","SingleQuizComponent_ng_container_5_ng_container_3_Template","x_r2","ctx_r0","getAllOptionsOfQuestion","SingleQuizComponent","constructor","router","axios","url","includes","strings","split","Number","getQuizDataRequest","request","then","rs","status","data","quizTitle","questions","options","console","log","question","optionsResult","filter","option","ɵɵdirectiveInject","i1","Router","i2","AxiosService","selectors","decls","vars","consts","template","SingleQuizComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelementEnd","SingleQuizComponent_ng_container_5_Template","ɵɵtextInterpolate"],"sources":["/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/single-quiz/single-quiz.component.ts","/Users/mno/Desktop/angular-spring-quizzes/angular-quizzes-app/src/app/pages/single-quiz/single-quiz.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AxiosService} from \"../../axios.service\";\n\n@Component({\n  selector: 'app-single-quiz',\n  templateUrl: './single-quiz.component.html',\n  styleUrls: ['./single-quiz.component.css']\n})\nexport class SingleQuizComponent {\n\n  id!: number;\n  quizTitle!: string;\n  questions!: any;\n  options!: any;\n\n  optionsResult: any;\n\n  constructor(private router: Router, private axios: AxiosService) {\n    let url: string = this.router.url;\n    if (url.includes(';id=')) {\n      let strings = url.split(';id=');\n      this.id = Number(strings[1]);\n\n      let getQuizDataRequest = {\n        id: this.id\n      }\n\n      this.axios.request(\"POST\", '/get-data-by-quiz-id', getQuizDataRequest).then(rs => {\n        if (rs.status != 200) return;\n        let data = rs.data;\n        this.quizTitle = data.title;\n        this.questions = data.questions;\n        this.options = data.options;\n        console.log(this.quizTitle, this.questions, this.options)\n      });\n    }\n  }\n\n  getAllOptionsOfQuestion(question: any): typeof this.optionsResult {\n    return this.optionsResult = this.options.filter((option: any) => {\n      return option.question.id === question.id;\n    });\n  }\n}\n","<div>\n  <h1>{{quizTitle}}</h1>\n\n  <hr><br>\n\n  <ng-container *ngFor=\"let question of questions; let x = index\" class=\"mb-3\">\n      Question {{x+1}}. {{question.title}}\n    <br>\n      <ng-container *ngFor=\"let option of getAllOptionsOfQuestion(question); let y = index\">\n        <input type=\"radio\" name=\"radio_answer_{{question.id}}\" *ngIf=\"String(question.questionType) == 'SINGLE_SELECT'\">\n        <input type=\"checkbox\" name=\"checkbox_answer_{{question.id}}\" *ngIf=\"String(question.questionType) == 'MULTI_SELECT'\">\n        {{y+1}} ) {{option.title}}\n        <br>\n      </ng-container>\n  </ng-container>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}